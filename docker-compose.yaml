services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      VECTOR_DATABASE_URL: postgresql://user:password@vectordb:5432/vector_db
      UPLOAD_DIR: ./uploads/
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - db
      - vectordb
      - redis
    networks:
      - app-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app worker --loglevel=info
    working_dir: /app
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      DATABASE_URL: postgresql://user:password@db:5432/mydatabase
      VECTOR_DATABASE_URL: postgresql://user:password@vectordb:5432/vector_db
      UPLOAD_DIR: ./uploads/
    depends_on:
      - db
      - vectordb
      - redis
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:13
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  vectordb:
    image: ankane/pgvector
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vector_db
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgvector_data:
  redis_data: