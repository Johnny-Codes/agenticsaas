services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads # Mount for file uploads
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      VECTOR_DATABASE_URL: ${VECTOR_DATABASE_URL}
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - redis
    networks:
      - app-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A tasks.tasks worker --loglevel=info # Standard worker command
    volumes:
      - ./backend:/app
      - ./backend/uploads:/app/uploads # Access uploaded files
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Map to standard HTTP port
    volumes:
      - ./frontend:/app
      - /app/node_modules # Avoids overwriting node_modules
    depends_on:
      - backend # Frontend needs backend to be up for API calls
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data: